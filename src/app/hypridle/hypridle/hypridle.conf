general {
    lock_cmd = pidof hyprlock || hyprlock --config ~/.config/hyprlock/hyprlock.conf
    # lock before suspend.
    before_sleep_cmd = loginctl lock-session
    # to avoid having to press a key twice to turn on the display.
    after_sleep_cmd = hyprctl dispatch dpms on
}

listener {
    # 2.5min.
    timeout = 150
    # set monitor backlight to minimum, avoid 0 on OLED monitor.
    on-timeout = brightnessctl -s set 10
    # monitor backlight restore.
    on-resume = brightnessctl -r
}

# turn off keyboard backlight, comment out this section if you dont have a keyboard backlight.
listener {
    # 2.5min.
    timeout = 150
    # turn off keyboard backlight.
    on-timeout = brightnessctl -sd rgb:kbd_backlight set 0
    # turn on keyboard backlight.
    on-resume = brightnessctl -rd rgb:kbd_backlight
}

listener {
    # 5min
    timeout = 300
    # lock screen when timeout has passed
    on-timeout = loginctl lock-session
}

listener {
    # 5.5min
    timeout = 330
    # screen off when timeout has passed
    on-timeout = hyprctl dispatch dpms off
    # screen on when activity is detected after timeout has fired.
    on-resume = hyprctl dispatch dpms on
}

# Hibernate 是休眠，保存在磁盘，需要重新开机启动，回到休眠前的状态
# suspend 是睡眠，保存在内存，鼠标和键盘可以唤醒，回到睡眠前的状态
# 下面是对 suspend-then-hibernate 的解释：
# 系统最初进入挂起的低功耗状态（该状态存储在 RAM 中）。当电池电量过低（低于5%）或超过一定时间（以先发生者为准）时，系统会自动唤醒，然后休眠。这在速度和安全性之间建立了平衡。
# 如果系统没有电池，则在 HibernateDelaySec= 过后系统将进入休眠状态。如果未设置，则默认为 “ 2h ” 。
# 如果系统有电池且未设置 HibernateDelaySec= ，则首先尝试低电量警报（ACPI _BTP）来检测电池百分比并唤醒系统进入休眠状态。如果不可用，或者设置了 HibernateDelaySec= ，系统将定期唤醒以检查时间并检测电池百分比/放电率。该速率用于安排下一次检测。如果这也不可用，则使用 SuspendEstimationSec= 作为最后的手段。
listener {
    # 30min
    timeout = 1800
    # suspend pc
    on-timeout = systemctl suspend-then-hibernate
}
