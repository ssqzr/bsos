# https://wiki.archlinuxcn.org/wiki/Zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source "${XDG_CONFIG_HOME:-$HOME/.config}/zsh/lib/constant.zsh"
source "${XDG_CONFIG_HOME:-$HOME/.config}/zsh/lib/os.zsh"

# 配置自动补全
autoload -U compinit promptinit
compinit
promptinit

# 设置 walters 主题的默认命令行提示符
#prompt walters

# 方向键控制的自动补全
zstyle ':completion:*' menu select
# 命令行别名的自动补全
setopt completealiases
# 消除历史记录中的重复条目
# 体验下来并不好，不能知道最近执行的命令
# setopt HIST_IGNORE_DUPS

# 刷新自动补全
zstyle ':completion:*' rehash true

# 设置 history
# https://zsh.sourceforge.io/Doc/Release/Parameters.html#index-HISTFILE
# 查看 history.zsh 对 HIST_STAMPS 的用处，执行 history 命令时会打印执行命令的时间
HIST_STAMPS="%Y-%m-%d %k:%M:%S"
source "${XDG_CONFIG_HOME:-$HOME/.config}/zsh/lib/history.zsh"

# zkbd
# run /usr/share/zsh/functions/Misc/zkbd to generate
source "$HOME/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE}"
# "--" 的解答： https://unix.stackexchange.com/questions/11376/what-does-double-dash-mean
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete


# 快捷键的设置
# 运行 showkey -a 可以查看按键
# https://wiki.zshell.dev/zh-Hans/docs/guides/syntax/bindkey
# https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html
# Alt-j
bindkey "^[j" backward-char
# Alt-l
bindkey "^[l" forward-char
# Alt-i
bindkey "^[i" up-line-or-history
# Alt-k
bindkey "^[k" down-line-or-history
# Alt-;
bindkey "^[;" end-of-line
# Alt-h
bindkey "^[h" beginning-of-line
# https://zsh.sourceforge.io/Doc/Release/Parameters.html 搜索 WORDCHARS
# word 的分隔符定义是 $WORDCHARS
# Ctrl-Backspace
bindkey "^H" backward-kill-word
# Ctrl-Delete
bindkey "^[[3;5~" kill-word
# Ctrl-left
bindkey "^[[1;5D" backward-word
# Ctrl-right
bindkey "^[[1;5C" forward-word

# 去掉默认的LESS=-R
unset LESS

# https://unix.stackexchange.com/questions/557486/allowing-comments-in-interactive-zsh-commands
# 允许在交互模式中使用注释
# `echo "abc" # 这是注释` 将输出 abc
# 否则会报错
setopt INTERACTIVE_COMMENTS

# 设置主题
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
if os::tty::is_support_256color;then
    source "${XDG_CONFIG_HOME:-$HOME/.config}/zsh/p10k/p10k.zsh"
else
    source "${XDG_CONFIG_HOME:-$HOME/.config}/zsh/p10k/p10k_vtty.zsh"
fi

# 如果是 vtty ，设置本地化为C，不然执行命令会乱码
# FIXME:忘记启动Hyprland是从tty启动了，导致Hyprland启动时本地化语言不对
# 暂时先注释掉，看后续怎么启动Hyprland比较好
# if os::tty::is_vtty;then
#     LANG="C.UTF-8"
# fi

# alias 配置
alias ll='ls -l -h --group-directories-first --color=auto'
alias rm="rm -i"
alias mv="mv -i"

# fzf 配置
# Set up fzf key bindings and fuzzy completion
eval "$(fzf --zsh)"
if [ -e "${XDG_CONFIG_HOME:-$HOME/.config}/fzf/fzfrc" ];then
    export FZF_DEFAULT_OPTS_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/fzf/fzfrc"
fi

# pkgfile 配置，command-not-found 的支持
source /usr/share/doc/pkgfile/command-not-found.zsh

# wallust 的配置
if [ -e "$HOME/.cache/wallust/sequences" ];then
    # 使用指定的壁纸生成的主题颜色
    # 查看以下代码了解会设置终端的哪些颜色
    # https://codeberg.org/explosion-mental/wallust/src/branch/master/src/sequences.rs
    cat "$HOME/.cache/wallust/sequences"
else
    # 使用随机的主题颜色
    wallust theme -q -u random
fi
if [ -e "${XDG_CACHE_HOME:-$HOME/.cache}/colors/zsh.zsh" ];then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/colors/zsh.zsh"
fi

# zsh-autosuggestions 配置
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# https://github.com/zsh-users/zsh-autosuggestions#configuration
ZSH_AUTOSUGGEST_STRATEGY=(history completion match_prev_cmd)
# https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html#Character-Highlighting
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="standout"

# zsh-syntax-highlighting 配置
# NOTE: 这个必须是最后一行，https://github.com/zsh-users/zsh-syntax-highlighting?tab=readme-ov-file#why-must-zsh-syntax-highlightingzsh-be-sourced-at-the-end-of-the-zshrc-file
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS+=(brackets pattern regexp cursor root line)
