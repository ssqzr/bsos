# 快捷键准则
# 1. $mainMod 相关的是全局范围的快捷键
# 2. CTRL 是Control的缩写，意思是“控制”。Ctrl键用来执行命令的。
# 3. SHIFT 的意思是“切换“，是相同功能下相反的操作的快捷键。
#       比如 $mainMod + Tab 是切换到下一个工作区，$mainMod + SHIFT + Tab 是切换到上一个工作区
# 4. ALT 是Alternate的缩写，是“交替”的意思。与窗口相关的功能的快捷键
#       ALT 最好不用直接和英文字母和数字组合使用，因为会和很多软件的快捷键冲突
# 5. Fn 系统设置相关的快捷键，例如音量，亮度等。
# 6. 启动常用软件的快捷键，一般是 $mainMod + 其他

# 官方教程： https://wiki.hyprland.org/Configuring/Binds/
# F1-F12 的一般用途： https://medium.com/@sb.prem17/function-keys-f1-f2-f3-f4-f5-f6-f7-f8-f9-f10-f11-f12-deda1388ea5d


#################################### 没有分类        ####################################
bind = $mainMod, escape, exit


#################################### 打开默认软件     ####################################
# 打开默认文件管理器
bind = $mainMod, e, exec, xdg-open ~


#################################### 显示器的快捷键     ####################################


# 在显示器之间切换焦点
bind = CTRL ALT, Tab, focusmonitor, +1



#################################### 窗口的快捷键     ####################################
# 切换 layout
bind = $mainMod SHIFT, L, exec, ~/.config/hypr/scripts/toggle_layout.sh

# 关闭当前窗口
bind = ALT, F4, killactive

# 切换窗口为浮动
bind = $mainMod, f, togglefloating
# 将当前浮动窗口变为固定窗口，即在所有工作区都显示
bind = $mainMod, p, pin

# 当前工作空间的窗口切换焦点
bind = ALT, tab, cyclenext
bind = ALT SHIFT, tab, cyclenext, prev
bind = ALT, q, cyclenext, visible hist
bind = ALT SHIFT, q, cyclenext, visible prev hist

# Dwindle 布局下的窗口相关快捷键
bind = $mainMod, j, layoutmsg, togglesplit


# 将当前窗口移动到当前显示器的下一个空的工作空间，焦点不跟随切换
bind = ALT, F2, movetoworkspacesilent, emptynm
# 将当前窗口移动到当前显示器的下一个空的工作空间，焦点跟随切换
bind = ALT, F3, movetoworkspace, emptynm


# swapnext 不可控，直观上并不知道它的上一个和下一个窗口是哪个
# swapwindow 不可控
#       例如： 左边一列有上下两个窗口，A在上，B在下，右边一列只有一个窗口C。
#             当 A 和 C 可以对换时，但是我想将 B 和 C 兑换，此时 swapwindow 就无法实现
#             当 B 和 C 可以对换时，但是我想将 A 和 C 兑换，此时 swapwindow 就无法实现
# movewindow 也无法实现 swapwindow 不可控的问题，但是可以代替 swapwindow ，并且 movewindow 可以移动到其他显示器
bind = $mainMod ALT, left, movewindow, l
bind = $mainMod ALT, right, movewindow, r
bind = $mainMod ALT, up, movewindow, u
bind = $mainMod ALT, down, movewindow, d


# 移动窗口
bind = $mainMod CTRL ALT, left, movewindow, mon:l silent
bind = $mainMod CTRL ALT, right, movewindow, mon:r silent
bind = $mainMod CTRL ALT, up, movewindow, mon:u silent
bind = $mainMod CTRL ALT, down, movewindow, mon:d silent


# fullscreenstate internal client
# internal 是hyprland控制窗口的大小
# client 是窗口大小不会改变，在其限制的窗口大小里全屏
# 可以使用chrome测试下面几种全屏的不同
# 例如：chrome窗口全屏，chrome自身没有全屏
bind = $mainMod, F11, fullscreenstate, 2 0
# F11 使用默认的行为

# 改变窗口的大小
# resizeactive的参数行为很奇怪，还是用鼠标吧
# binde = $mainMod CTRL ALT, left, resizeactive, 10 10
# 通过 $mainMod + LMB 和拖动来移动窗口
bindm = $mainMod, mouse:272, movewindow
# 通过 $mainMod + RMB 来调整窗口大小
bindm = $mainMod, mouse:273, resizewindow



#################################### 工作空间的快捷键  ####################################
# 两个显示器交换工作空间
# https://www.reddit.com/r/hyprland/comments/13tbdyc/help_swappingmoving_active_workspaces_across/
# https://wiki.hyprland.org/Configuring/Dispatchers
bind = $mainMod, s, swapactiveworkspaces,current +1

# 在当前显示器上新建一个空的工作空间
# FIXME: 当工作空间A已经在配置文件中定义，但是是其他显示器的，此时新建空的工作空间将会是A，而不是当前显示器的空工作空间
# https://github.com/hyprwm/Hyprland/pull/6089
# https://github.com/hyprwm/Hyprland/issues/8416
bind = $mainMod, n, workspace, emptynm

# 当前显示器上的工作空间切换
bind = $mainMod, tab, workspace, m+1
bind = $mainMod SHIFT, tab, workspace, m-1

# 全局切换工作空间
# `和~ 键码是 code:49，也可使用 grave
bind = $mainMod, grave, workspace, e+1
bind = $mainMod SHIFT, grave, workspace, e-1
